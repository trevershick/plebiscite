package org.trevershick.plebiscite.engine.impl;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Date;
import java.util.List;

import org.trevershick.plebiscite.model.Ballot;
import org.trevershick.plebiscite.model.BallotClosePolicy;
import org.trevershick.plebiscite.model.BallotState;
import org.trevershick.plebiscite.model.Vote;

import com.amazonaws.services.dynamodb.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodb.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodb.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodb.datamodeling.DynamoDBIgnore;
import com.amazonaws.services.dynamodb.datamodeling.DynamoDBMarshalling;
import com.amazonaws.services.dynamodb.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodb.datamodeling.DynamoDBVersionAttribute;

@DynamoDBTable(tableName="Ballots")
public class DynamoDbBallot implements Ballot {
	private String id;
	private String title;
	private String description;
	private String owner;
	
	private BallotState state = BallotState.Closed;
	private Integer version;
	
	private Date expiration = null;
	private boolean openBallot;
	private boolean voteChangeable;
	
	private int voteCount = 0;
	private String lastVoter;
	
	
	@DynamoDBAutoGeneratedKey
	@DynamoDBHashKey(attributeName = "Id")
    public String getId() { return id; }
    public void setId(String id) { this.id = id; }
    
    @DynamoDBVersionAttribute(attributeName="Version")
    public Integer getVersion() {
    	return this.version;
    }
    public void setVersion(Integer value) {
    	this.version = value;
    }
    
	@DynamoDBAttribute(attributeName="Owner")
    public String getOwner() {
		return owner;
	}
	public void setOwner(String owner) {
		this.owner = owner;
	}
	
	
	@DynamoDBAttribute(attributeName="Title")
    public String getTitle() { return title; }
    public void setTitle(String title) { 
    	this.title = title;
    	if (this.description == null) {
    		setDescription(title);
    	}
    }
    
    
    /**
     * @see DynamoDbBallot#getLastVoter()
     */
    @DynamoDBAttribute(attributeName="VoteCount")
    public int getVoteCount() {
		return voteCount;
	}
	public void setVoteCount(int voteCount) {
		this.voteCount = voteCount;
	}
	
	/**
	 * to be updated by the data service.  the engine really wouldn't do this
	 * the fact that this has to be updated in a two step fashion is due to the data service impl
	 * not the engine
	 * @return
	 */
	@DynamoDBAttribute(attributeName="LastVoter")
    public String getLastVoter() {
		return lastVoter;
	}
	public void setLastVoter(String lastVoter) {
		this.lastVoter = lastVoter;
	}
	
	@DynamoDBAttribute(attributeName="Description")
    public String getDescription() {
		return description;
	}
	public void setDescription(String description) {
		this.description = description;
	}
	
    @DynamoDBAttribute(attributeName="State")
    public String getStateAsString() { return state.name(); }
    public void setStateAsString(String value) {
    	try {
    		setState(BallotState.valueOf(value));
    	} catch (Exception e) {
    		setState(BallotState.Closed);
    	}
    }
    		
    @DynamoDBMarshalling(marshallerClass=DateTimeMarshaller.class)
	@DynamoDBAttribute(attributeName="Expiration")
    public Date getExpirationDate() {
		return expiration;
	}
	public void setExpirationDate(Date expiration) {
		this.expiration = expiration;
	}


	@DynamoDBIgnore
	public BallotState getState() {
		return state;
	}
	@DynamoDBIgnore
	public void setState(BallotState state) {
		this.state = state;
	}
	
	@DynamoDBMarshalling(marshallerClass=YNMarshaller.class)
	@DynamoDBAttribute(attributeName="IsOpenBallot")
	public boolean isOpenBallot() {
		return this.openBallot;
	}
	public void setOpenBallot(boolean b) {
		this.openBallot = b ;
	}
	
	@DynamoDBMarshalling(marshallerClass=YNMarshaller.class)
	@DynamoDBAttribute(attributeName="IsVoteChangeable")
	public boolean isVoteChangeable() {
		return this.voteChangeable;
	}
	public void setVoteChangeable(boolean value) {
		this.voteChangeable = value;
	}
	
	@DynamoDBIgnore
	public boolean expires() {
		return this.expiration != null;
	}
	
	@DynamoDBIgnore
	public boolean isComplete() {
		return getState().isComplete();
	}
	
	@DynamoDBMarshalling(marshallerClass=PoliciesMarshaller.class)
	@DynamoDBAttribute(attributeName="Policies")
	public Collection<BallotClosePolicy> getPolicies() {
		return this.policies;
	}
	public void setPolicies(Collection<BallotClosePolicy> pols) {
		this.policies.clear();
		this.policies.addAll(pols);
		Collections.sort(this.policies);
	}

	// keep the policies sorted by 
	private List<BallotClosePolicy> policies = new ArrayList<BallotClosePolicy>();


	public void addPolicy(BallotClosePolicy p) {
		this.policies.add(p);
		Collections.sort(this.policies);
	}
	public Ballot tallyVotes(Collection<Vote> votes) {
		for (BallotClosePolicy policy : policies) {
			if (isComplete()) { break; }
			this.setState(policy.shouldClose(this, votes));
		}
		return this;
	}
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DynamoDbBallot other = (DynamoDbBallot) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}
	
    
}
